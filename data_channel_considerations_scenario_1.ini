
# *   This program is distributed in the hope that it will be useful,
# *   but WITHOUT ANY WARRANTY; without even the implied warranty of
# *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *   GNU General Public License for more details.
# *
# *   You should have received a copy of the GNU General Public License
# *   along with this program.  If not, see <http://www.gnu.org/licenses/>.
# *
# *   Contact: julius.flohr@uni-due.de

#This is setting 1

[General]
network            															= rtp_v_datachannel
rtp_v_datachannel.**.vector-recording           							= true
record-eventlog = false

#simtime-scale       = -8   # 10ns time scale

# ===== General Scenario Settings ======================

# ===== Network QoS Settings ===========================
rtp_v_datachannel.westernCoreRouter.ppp[0].ppp.mtu             				= 1500 B
rtp_v_datachannel.westernCoreRouter.ppp[0].queueType           				= "DropTailQueue"
rtp_v_datachannel.westernCoreRouter.ppp[0].queue.frameCapacity 				= 100
			
rtp_v_datachannel.easternCoreRouter.ppp[0].ppp.mtu            				= 1500 B
rtp_v_datachannel.easternCoreRouter.ppp[0].queueType           				= "DropTailQueue"
rtp_v_datachannel.easternCoreRouter.ppp[0].queue.frameCapacity			 	= 100


**.coreChannel.datarate = {10 Mbps, 1Mbps}
**.coreChannel.delay = 20 ms

#rtp_v_datachannel.easternCoreRouter.


# ----- Common Settings --------------------------------
rtp_v_datachannel.*.ppp[*].ppp.mtu = 1500 B
**.mtu = 1500B


##############################################################
#################RTP Common configuration#####################
##############################################################

**.debug_enabled = true
**.rtcWeb*.hasRtp = true
**.rtcWeb*.**.rtpmap 															= "120 VP8/90000;97 H264/90000;0 PCMU/8000;8 PCMA/8000;9 G722/8000;101 telephone-event/8000;121 Generic/90000;12 Generic/8000"
**.mkiSize 																		= 4B
**.authTagSize 																	= 4B
**.rtcpMode 																	= 2

**.SenderSideCongestionControl 													= 3 #NADA
**.ReceiverSideCongestionControl 												= 3 #NADA

# Advanced RTP Protocol features
**.RTPAVPF_NACK_enabled 														= false
**.RTPAVPF_REMB_enabled 														= false
**.RTPAVPF_TMMBR_enabled 														= false
**.RTPAVPF_NADA_enabled 														= true # enable NADA AVPF message which carries consolidated Network Delay 
**.NADA_AVPF_interval = (100ms)	


##############################################################
#################RTP Sender coonfig ##########################
##############################################################

**.rtcWebClient.RTCWebApp.rtcWebrtpApp.commonName	= "sender"

#-------- RTP TrafficgenCompound
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.sessionEnterDelay 						= 0s
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.sessionLeaveDelay 						= 5s

**.rtcWebClient.RTCWebApp.rtcWebrtpApp.transmissionStartDelay 					= 0s
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.transmissionStopDelay 					= 60s

**.rtcWebClient.RTCWebApp.rtpAppType 											= "RTPApplication"
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.profileName 								= "RTPSAVPF" 
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.destinationAddress 						= "rtp_v_datachannel.rtcWebServer"
**.rtcWebClient.RTCWebApp.rtcWebrtpApp.portNumber 								= 5004

**.rtcWebClient.RTCWebApp.numMediaSources 										= 1
**.rtcWebClient.RTCWebApp.rtpMediaSourceType 									= "RTPPayloadTrafficgenCompound"
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].trafficGenType 					= "TrafficgenRmcatTraceVideo" #"TrafficgenRmcatTraceVideo" "TrafficgenSimpleTargetBitrate"
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].payloadType 						= 120
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].numGenerators 						= 1

**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generatorHandler.clockRate 		= 90000
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generatorHandler.framesPerSecond 	= 25

#--------------- RTP Traffic Generator Configuration 
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].packetInterval 		= 40ms
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].id					= 10
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].name 					= "Simple traffic generator"

**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].priority				= 10
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].initialTargetBitrate	= 150kbps #starting bit rate
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].encoderTimeBound		= 100ms
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].stopTime 				= 60s
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].videoPath				= "../rmcat_video_traces/Foreman_lookahead_1"
**.rtcWebClient.RTCWebApp.MediaPayloadGen[0].generator[0].videoPrefix			= "Foreman_ProRes"


##############################################################
###########################RTP Receiver#######################
##############################################################

**.rtcWebServer.RTCWebApp.rtcWebrtpApp.commonName 								= "receiver"

**.rtcWebServer.RTCWebApp.numMediaSources										= 0
**.rtcWebServer.RTCWebApp.rtpAppType 											= "RTPApplication"
**.rtcWebServer.RTCWebApp.rtcWebrtpApp.profileName 								= "RTPSAVPF"
**.rtcWebServer.RTCWebApp.rtcWebrtpApp.destinationAddress 						= "rtp_v_datachannel.rtcWebClient"
**.rtcWebServer.RTCWebApp.rtcWebrtpApp.portNumber 								= 5004

**.rtcWebServer.RTCWebApp.rtcWebrtpApp.sessionEnterDelay 						= 0s
**.rtcWebServer.RTCWebApp.rtcWebrtpApp.sessionLeaveDelay 						= 0s

**.rtcWebServer.RTCWebApp.rtcWebrtpApp.transmissionStartDelay 					= 0s
**.rtcWebServer.RTCWebApp.rtcWebrtpApp.transmissionStopDelay 					= 100s

##############################################################
###########################RTP Congestion Control#############
##############################################################
**.NADA_beta_s = 0.0
**.NADA_beta_v = 0.0
**.NADA_gamma_max = 0.2

##############################################################
########################## SCTP cross traffic ################
##############################################################

rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].activeMode      = true
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].connectTime     = 0.001 s
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].startTime       = 5 s

rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].stopTime        = 60 s
#rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].queueSize       = 5e+06 B
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].unordered       = 0
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].unreliable      = 0
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].outboundStreams = 1
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].maxMsgSize      = 1444 B
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].frameRate       = 0 Hz
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].frameSize       = 1444 B
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].frameRateString = ""
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].frameSizeString = ""
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].onTime          = -1s
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].offTime         = -1s
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].maxReconnects   = 5
rtp_v_datachannel.rtcWebClient.numPcapRecorders                   = 1   # *** Enable pcap dump here! ***


# ----- NetPerfMeter Passive Node ------------------------
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].activeMode        = false
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].connectTime       = 0.001 s
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].startTime         = uniform(0.9s,1.1s)
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].resetTime         = 19 s
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].stopTime          = 60 s
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].queueSize         = 5e+08 B
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].unordered         = 0
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].unreliable        = 0
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].maxInboundStreams = 16
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].frameRate         = 0 Hz
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].frameSize         = 0 B
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].frameRateString   = ""
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].frameSizeString   = ""
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].maxMsgSize        = 1444 B
rtp_v_datachannel.rtcWebServer.numPcapRecorders                     = 1   # *** Enable pcap dump here! ***

# ----- NetPerfMeter Connections -------------------------
rtp_v_datachannel.rtcWebClient.numNetPerfMeterApps              = 1
rtp_v_datachannel.rtcWebServer.numNetPerfMeterApps              = 1
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].localPort     = 20000+ancestorIndex(0)
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].remotePort    = 8000+ancestorIndex(0)
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].remoteAddress = "rtp_v_datachannel.rtcWebServer%ppp0"
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].primaryPath   = "rtp_v_datachannel.rtcWebServer%ppp0"
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].localPort     = 8000+ancestorIndex(0)
rtp_v_datachannel.rtcWebClient.netPerfMeterApp[*].protocol      = "SCTP"
rtp_v_datachannel.rtcWebServer.netPerfMeterApp[*].protocol      = "SCTP"
rtp_v_datachannel.rtcWebServer.hasLeakyBucket					= false

rtp_v_datachannel.rtcWebClient.hasLeakyBucket					= true
rtp_v_datachannel.rtcWebClient.RTCWebApp.ccNotificationEnabled = true
rtp_v_datachannel.rtcWebClient.bucket.bucket.bucketSize =  10  
rtp_v_datachannel.rtcWebClient.bucket.redEnabled = false 

##############################################################
########################## SCTP Settings #####################
##############################################################

rtp_v_datachannel.*.sctp.arwnd                 = 5e+06
